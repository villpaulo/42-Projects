{"ast":null,"code":"import _toConsumableArray from \"/Users/pv/react-interview/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/pv/react-interview/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pv/react-interview/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pv/react-interview/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pv/react-interview/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pv/react-interview/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/pv/react-interview/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/pv/react-interview/src/Pagination.js\";\nimport React from \"react\";\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pagination, _React$Component);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pagination).call(this, props));\n    _this.state = {\n      setupPagination: {},\n      numberByPage: 4\n    };\n    _this.handleSelectSize = _this.handleSelectSize.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.total !== prevProps.total) {\n        this.handleSelectPage(1);\n      }\n    }\n  }, {\n    key: \"getPaginationSetup\",\n    value: function getPaginationSetup(currentPage) {\n      var totalNumberPages = Math.ceil(this.props.total / this.state.numberByPage);\n\n      var pages = _toConsumableArray(Array(totalNumberPages).keys()).map(function (i) {\n        return i + 1;\n      });\n\n      if (currentPage > totalNumberPages) {\n        currentPage = 1;\n      }\n\n      return {\n        currentPage: currentPage,\n        totalNumberPages: totalNumberPages,\n        pages: pages\n      };\n    }\n  }, {\n    key: \"handleSelectPage\",\n    value: function handleSelectPage(page) {\n      var _this2 = this;\n\n      var setup = this.state.setupPagination;\n      if (page < 1 || page > setup.totalNumberPages) return;\n      var setupPagination = this.getPaginationSetup(page);\n      this.setState({\n        setupPagination: setupPagination\n      }, function () {\n        _this2.props.updateDatePagination(setupPagination.currentPage, _this2.state.numberByPage);\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var _this3 = this;\n\n      var setupPagination = this.getPaginationSetup(this.state.setupPagination.currentPage);\n      this.setState({\n        setupPagination: setupPagination\n      }, function () {\n        _this3.props.updateDatePagination(setupPagination.currentPage, _this3.state.numberByPage);\n      });\n    }\n  }, {\n    key: \"handleSelectSize\",\n    value: function handleSelectSize(e) {\n      var option = e.target.value;\n      this.setState({\n        numberByPage: option\n      }, this.handleSubmit);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var setupPagination = this.state.setupPagination;\n\n      if (!setupPagination.pages || setupPagination.pages.length <= 1) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"previous\",\n        onClick: function onClick() {\n          return _this4.handleSelectPage(setupPagination.currentPage - 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"\\xAB\"), setupPagination.pages.map(function (page, index) {\n        return React.createElement(\"span\", {\n          key: index,\n          className: setupPagination.currentPage === page ? 'active page' : 'page',\n          onClick: function onClick() {\n            return _this4.handleSelectPage(page);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, page);\n      }), React.createElement(\"span\", {\n        className: \"next\",\n        onClick: function onClick() {\n          return _this4.handleSelectPage(setupPagination.currentPage + 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"\\xBB\"), React.createElement(\"span\", {\n        className: \"number-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        onChange: this.handleSelectSize,\n        value: this.state.numberByPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"4\"), React.createElement(\"option\", {\n        value: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"8\"), React.createElement(\"option\", {\n        value: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"10\"), React.createElement(\"option\", {\n        value: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"12\"))));\n    }\n  }]);\n\n  return Pagination;\n}(React.Component);\n\nexport { Pagination as default };","map":{"version":3,"sources":["/Users/pv/react-interview/src/Pagination.js"],"names":["React","Pagination","props","state","setupPagination","numberByPage","handleSelectSize","bind","prevProps","prevState","total","handleSelectPage","currentPage","totalNumberPages","Math","ceil","pages","Array","keys","map","i","page","setup","getPaginationSetup","setState","updateDatePagination","e","option","target","value","handleSubmit","length","index","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n\n\nexport default class Pagination extends React.Component {\n  \n    constructor(props) {\n      super(props);\n     \n      this.state = {  setupPagination: {}, numberByPage:4};\n      this.handleSelectSize = this.handleSelectSize.bind(this);\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n     \n    if (this.props.total !== prevProps.total) {\n        this.handleSelectPage(1);\n    }   \n  }\n  \n  getPaginationSetup( currentPage) {\n\n    var totalNumberPages = Math.ceil(this.props.total / this.state.numberByPage);\n    var pages = [...Array(totalNumberPages).keys()].map(i => i+1);\n\n    if(currentPage>totalNumberPages) {\n        currentPage=1;\n    }\n    return {\n        currentPage: currentPage,\n        totalNumberPages:totalNumberPages,\n        pages: pages\n    };\n}\n\n  handleSelectPage(page) {\n  \n    const setup = this.state.setupPagination; \n    if (page < 1 || page > setup.totalNumberPages)  return;\n\n    const setupPagination = this.getPaginationSetup(page);\n    this.setState({ setupPagination },()=>{\n        this.props.updateDatePagination(setupPagination.currentPage,this.state.numberByPage);\n    });\n     \n  }\n\n  handleSubmit(){\n    const setupPagination = this.getPaginationSetup(this.state.setupPagination.currentPage);\n    this.setState({ setupPagination },()=>{\n        this.props.updateDatePagination(setupPagination.currentPage,this.state.numberByPage);\n    });\n  }\n  handleSelectSize(e){\n    const option = e.target.value;\n   this.setState({  numberByPage : option },this.handleSubmit);\n  }\n  \n    render() {\n      const setupPagination = this.state.setupPagination;\n\n      if (!setupPagination.pages || setupPagination.pages.length <= 1) {\n        return null;\n    }\n  \n      return (\n  <div className=\"pagination\">\n  <span className=\"previous\" onClick={() => this.handleSelectPage(setupPagination.currentPage - 1)}>&laquo;</span>\n  \n  {setupPagination.pages.map((page, index) =>\n                    <span key={index} className={setupPagination.currentPage === page ? 'active page' : 'page'} onClick={() => this.handleSelectPage(page)}>{page}</span>\n                )}\n  \n   \n  \n    <span className=\"next\" onClick={() => this.handleSelectPage(setupPagination.currentPage + 1)}>&raquo;</span>\n  \n    <span className=\"number-list\">\n    <select    onChange={this.handleSelectSize}   value={this.state.numberByPage}>\n      <option value=\"4\">4</option>\n      <option value=\"8\">8</option>\n      <option value=\"10\">10</option>\n      <option value=\"12\">12</option>\n    </select>\n  \n    </span>\n    \n  </div>\n      );\n    };\n  }"]},"metadata":{},"sourceType":"module"}