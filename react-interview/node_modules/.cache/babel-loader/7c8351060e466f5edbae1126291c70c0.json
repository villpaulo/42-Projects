{"ast":null,"code":"import _classCallCheck from \"/Users/pv/react-interview/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pv/react-interview/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pv/react-interview/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pv/react-interview/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pv/react-interview/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pv/react-interview/src/Cinema.js\";\nimport React from \"react\";\nimport { movies$ as moviesPromise } from \"./movies.js\";\nimport Filtre from \"./Filtre.js\";\nimport Filme from \"./Filme.js\";\nimport Pagination from \"./Pagination.js\";\n\nvar Cinema =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cinema, _React$Component);\n\n  function Cinema(props) {\n    var _this;\n\n    _classCallCheck(this, Cinema);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cinema).call(this, props));\n    _this.state = {\n      sourceMovies: [],\n      movies: [],\n      page: 1,\n      numberByPage: 5\n    };\n    return _this;\n  }\n\n  _createClass(Cinema, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      moviesPromise.then(function (sourceMovies) {\n        _this2.setState({\n          sourceMovies: sourceMovies,\n          movies: sourceMovies\n        });\n      });\n    }\n  }, {\n    key: \"removeElement\",\n    value: function removeElement(id) {\n      var sourceMovies = this.state.sourceMovies.filter(function (movie) {\n        return movie.id !== id;\n      });\n      var movies = this.state.movies.filter(function (movie) {\n        return movie.id !== id;\n      });\n      this.setState({\n        sourceMovies: sourceMovies,\n        movies: movies\n      });\n    }\n  }, {\n    key: \"filterList\",\n    value: function filterList(categoriesSelected) {\n      var sourceMovies = this.state.sourceMovies;\n      var movies = sourceMovies.filter(function (movie) {\n        return categoriesSelected.indexOf(movie.category) >= 0;\n      });\n      this.setState({\n        movies: movies\n      });\n    }\n  }, {\n    key: \"updateDatePagination\",\n    value: function updateDatePagination(currentPage, numberByPage) {\n      this.setState({\n        page: currentPage,\n        numberByPage: numberByPage\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var sourceMovies = this.state.sourceMovies;\n      var movies = this.state.movies;\n      var total = movies.length;\n      var start = (this.state.page - 1) * this.state.numberByPage;\n      var end = this.state.page * this.state.numberByPage;\n      var listFilmes = movies.slice(start, end).map(function (filme, idx) {\n        return React.createElement(Filme, {\n          data: filme,\n          key: idx,\n          handleClick: function handleClick(i) {\n            return _this3.removeElement(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      });\n      var categories = sourceMovies.reduce(function (accList, currentMovie) {\n        if (accList.indexOf(currentMovie.category) === -1) accList.push(currentMovie.category);\n        return accList;\n      }, []);\n      var listCategories = categories.map(function (category, idx) {\n        return React.createElement(\"option\", {\n          key: idx,\n          value: category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, category);\n      });\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Cin\\xE9ma\"), React.createElement(Filtre, {\n        list: listCategories,\n        submitFilter: function submitFilter(cat) {\n          return _this3.filterList(cat);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \" \", listFilmes), React.createElement(Pagination, {\n        total: total,\n        updateDatePagination: this.updateDatePagination,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Cinema;\n}(React.Component);\n\nexport { Cinema as default };","map":{"version":3,"sources":["/Users/pv/react-interview/src/Cinema.js"],"names":["React","movies$","moviesPromise","Filtre","Filme","Pagination","Cinema","props","state","sourceMovies","movies","page","numberByPage","then","setState","id","filter","movie","categoriesSelected","indexOf","category","currentPage","total","length","start","end","listFilmes","slice","map","filme","idx","i","removeElement","categories","reduce","accList","currentMovie","push","listCategories","cat","filterList","updateDatePagination","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAO,IAAIC,aAAnB,QAAuC,aAAvC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;IAEqBC,M;;;;;AACjB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAChB,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,YAAY,EAAE,EADF;AAEZC,MAAAA,MAAM,EAAE,EAFI;AAGZC,MAAAA,IAAI,EAAC,CAHO;AAIZC,MAAAA,YAAY,EAAC;AAJD,KAAb;AAFgB;AAQlB;;;;wCAEoB;AAAA;;AACjBV,MAAAA,aAAa,CAACW,IAAd,CAAmB,UAACJ,YAAD,EAAgB;AAChC,QAAA,MAAI,CAACK,QAAL,CAAc;AAAEL,UAAAA,YAAY,EAAZA,YAAF;AAAeC,UAAAA,MAAM,EAACD;AAAtB,SAAd;AACH,OAFA;AAGD;;;kCAEaM,E,EAAI;AAClB,UAAMN,YAAY,GAAK,KAAKD,KAAL,CAAWC,YAAX,CAAwBO,MAAxB,CAA+B,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACF,EAAN,KAAYA,EAAhB;AAAA,OAApC,CAAvB;AACA,UAAML,MAAM,GAAK,KAAKF,KAAL,CAAWE,MAAX,CAAkBM,MAAlB,CAAyB,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACF,EAAN,KAAYA,EAAhB;AAAA,OAA9B,CAAjB;AACA,WAAKD,QAAL,CAAc;AAAEL,QAAAA,YAAY,EAAZA,YAAF;AAAeC,QAAAA,MAAM,EAANA;AAAf,OAAd;AACC;;;+BAEUQ,kB,EAAoB;AAAA,UACrBT,YADqB,GACJ,KAAKD,KADD,CACrBC,YADqB;AAE7B,UAAMC,MAAM,GAAGD,YAAY,CAACO,MAAb,CAAoB,UAACC,KAAD;AAAA,eAAWC,kBAAkB,CAACC,OAAnB,CAA2BF,KAAK,CAACG,QAAjC,KAA4C,CAAvD;AAAA,OAApB,CAAf;AACA,WAAKN,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD;;;yCAEoBW,W,EAAYT,Y,EAAc;AAChD,WAAKE,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAACU,WAAP;AAAmBT,QAAAA,YAAY,EAAZA;AAAnB,OAAd;AACE;;;6BAGM;AAAA;;AAAA,UACEH,YADF,GACmB,KAAKD,KADxB,CACEC,YADF;AAAA,UAEEC,MAFF,GAEa,KAAKF,KAFlB,CAEEE,MAFF;AAGN,UAAMY,KAAK,GAACZ,MAAM,CAACa,MAAnB;AAGA,UAAMC,KAAK,GAAG,CAAC,KAAKhB,KAAL,CAAWG,IAAX,GAAkB,CAAnB,IAAwB,KAAKH,KAAL,CAAWI,YAAjD;AACA,UAAMa,GAAG,GAAI,KAAKjB,KAAL,CAAWG,IAAX,GAAkB,KAAKH,KAAL,CAAWI,YAA1C;AAID,UAAOc,UAAU,GAAGhB,MAAM,CAACiB,KAAP,CAAaH,KAAb,EAAmBC,GAAnB,EAAwBG,GAAxB,CAA4B,UAACC,KAAD,EAAOC,GAAP;AAAA,eAAgB,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAED,KAAb;AAAoB,UAAA,GAAG,EAAEC,GAAzB;AAA8B,UAAA,WAAW,EAAG,qBAAAC,CAAC;AAAA,mBAAI,MAAI,CAACC,aAAL,CAAmBD,CAAnB,CAAJ;AAAA,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;AAAA,OAA5B,CAApB;AAGA,UAAME,UAAU,GAAGxB,YAAY,CAACyB,MAAb,CAAoB,UAASC,OAAT,EAAkBC,YAAlB,EAAgC;AACrE,YAAGD,OAAO,CAAChB,OAAR,CAAgBiB,YAAY,CAAChB,QAA7B,MAA2C,CAAC,CAA/C,EAAkDe,OAAO,CAACE,IAAR,CAAaD,YAAY,CAAChB,QAA1B;AAClD,eAAOe,OAAP;AACA,OAHiB,EAGf,EAHe,CAAnB;AAKA,UAAOG,cAAc,GAAGL,UAAU,CAACL,GAAX,CAAe,UAACR,QAAD,EAAUU,GAAV;AAAA,eAAmB;AAAQ,UAAA,GAAG,EAAEA,GAAb;AAAkB,UAAA,KAAK,EAAEV,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoCA,QAApC,CAAnB;AAAA,OAAf,CAAxB;AACA,aACM;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEA,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAEkB,cAAd;AAA8B,QAAA,YAAY,EAAG,sBAAAC,GAAG;AAAA,iBAAI,MAAI,CAACC,UAAL,CAAgBD,GAAhB,CAAJ;AAAA,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAwBb,UAAxB,CAHA,EAIA,oBAAC,UAAD;AAAc,QAAA,KAAK,EAAEJ,KAArB;AAA6B,QAAA,oBAAoB,EAAE,KAAKmB,oBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA,CADN;AAQD;;;;EA9D+BzC,KAAK,CAAC0C,S;;SAArBpC,M","sourcesContent":["import React from \"react\";\nimport {movies$ as moviesPromise} from \"./movies.js\";\nimport Filtre from \"./Filtre.js\";\nimport Filme from \"./Filme.js\";\nimport Pagination from \"./Pagination.js\";\n\nexport default class Cinema extends React.Component {\n    constructor(props) {\n       super(props);\n       this.state = {\n        sourceMovies: [],\n        movies: [],\n        page:1,\n        numberByPage:5\n      };\n    }\n\n     componentDidMount() {\n        moviesPromise.then((sourceMovies)=>{\n           this.setState({ sourceMovies,movies:sourceMovies });\n       });\n      }\n\n      removeElement(id) {\n      const sourceMovies =   this.state.sourceMovies.filter(movie => movie.id !==id);\n      const movies =   this.state.movies.filter(movie => movie.id !==id);\n      this.setState({ sourceMovies,movies });\n      }\n\n      filterList(categoriesSelected) {\n        const { sourceMovies } = this.state;\n        const movies = sourceMovies.filter((movie)=>  categoriesSelected.indexOf(movie.category)>=0 );\n        this.setState({ movies });\n      }\n\n      updateDatePagination(currentPage,numberByPage) {\n     this.setState({ page:currentPage,numberByPage});\n      }\n\n\n    render() {\n       const { sourceMovies } = this.state;\n       const { movies } = this.state;\n       const total=movies.length;\n\n\n       const start = (this.state.page - 1) * this.state.numberByPage;\n       const end =  this.state.page * this.state.numberByPage;\n\n\n\n      const  listFilmes = movies.slice(start,end).map((filme,idx) =>  <Filme data={filme} key={idx} handleClick={ i => this.removeElement(i)}  />  );\n\n\n      const categories = sourceMovies.reduce(function(accList, currentMovie) {\n        if(accList.indexOf(currentMovie.category) === -1) accList.push(currentMovie.category);\n        return accList;\n       }, []);\n\n      const  listCategories = categories.map((category,idx) =>  <option key={idx} value={category}>{category}</option> );\n      return (\n            <div className=\"wrapper\">\n            <h2>Cinéma</h2>\n            <Filtre list={listCategories} submitFilter={ cat => this.filterList(cat)}  />\n            <div className=\"flex\"> {listFilmes}</div>\n            <Pagination   total={total}  updateDatePagination={this.updateDatePagination}  />\n            </div>\n        );\n    };\n}\n\n"]},"metadata":{},"sourceType":"module"}